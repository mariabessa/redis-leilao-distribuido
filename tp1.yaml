apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          command: ["redis-server", "--appendonly", "yes"]
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-storage
              mountPath: /data
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  # Optional: Specify storage class for cloud provider (e.g., AWS EBS, Google PD)
  # storageClassName: gp2  # Uncomment for AWS EKS
  # storageClassName: standard  # Uncomment for Google GKE
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: servidor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: servidor
  template:
    metadata:
      labels:
        app: servidor
    spec:
      containers:
        - name: servidor
          image: camilaapa/redis_app:latest
          imagePullPolicy: Never  # Change to Always for cloud deployment with a registry
          command: ["node", "servidor.js"]
          ports:
            - containerPort: 3000
          env:
            - name: REDIS_URL
              value: redis://redis:6379
---
apiVersion: v1
kind: Service
metadata:
  name: servidor
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 31000
  selector:
    app: servidor